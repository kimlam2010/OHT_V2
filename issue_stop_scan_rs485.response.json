{
  "url": "https://api.github.com/repos/kimlam2010/OHT_V2/issues/147",
  "repository_url": "https://api.github.com/repos/kimlam2010/OHT_V2",
  "labels_url": "https://api.github.com/repos/kimlam2010/OHT_V2/issues/147/labels{/name}",
  "comments_url": "https://api.github.com/repos/kimlam2010/OHT_V2/issues/147/comments",
  "events_url": "https://api.github.com/repos/kimlam2010/OHT_V2/issues/147/events",
  "html_url": "https://github.com/kimlam2010/OHT_V2/issues/147",
  "id": 3447837122,
  "node_id": "I_kwDOPhCGI87NgdHC",
  "number": 147,
  "title": "STOP SCAN MODULE RS485 API - Backend & Firmware Implementation",
  "user": {
    "login": "kimlam2010",
    "id": 19977585,
    "node_id": "MDQ6VXNlcjE5OTc3NTg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/19977585?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kimlam2010",
    "html_url": "https://github.com/kimlam2010",
    "followers_url": "https://api.github.com/users/kimlam2010/followers",
    "following_url": "https://api.github.com/users/kimlam2010/following{/other_user}",
    "gists_url": "https://api.github.com/users/kimlam2010/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kimlam2010/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kimlam2010/subscriptions",
    "organizations_url": "https://api.github.com/users/kimlam2010/orgs",
    "repos_url": "https://api.github.com/users/kimlam2010/repos",
    "events_url": "https://api.github.com/users/kimlam2010/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kimlam2010/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2025-09-24T06:16:42Z",
  "updated_at": "2025-09-24T06:16:42Z",
  "closed_at": null,
  "author_association": "OWNER",
  "active_lock_reason": null,
  "sub_issues_summary": {
    "total": 0,
    "completed": 0,
    "percent_completed": 0
  },
  "issue_dependencies_summary": {
    "blocked_by": 0,
    "total_blocked_by": 0,
    "blocking": 0,
    "total_blocking": 0
  },
  "body": "## Mục tiêu\nDừng quá trình scan/discovery các module slave qua RS485 theo yêu cầu Issue #100, cung cấp API cho FE gọi: Stop/Pause/Resume.\n\n### Tham chiếu\n- Issue gốc: https://github.com/kimlam2010/OHT_V2/issues/100\n\n---\n\n## Bối cảnh kỹ thuật\n- FW hiện có hàm scan: comm_manager_scan_range(start_addr, end_addr) — bật/tắt cờ qua registry_set_scanning(true/false).\n- Không có cơ chế \"interrupt/stop\" scan giữa chừng; không có pause/resume.\n- API đã có handler sơ bộ: POST /api/v1/modules/stop-scan (module_control_apis.c) nhưng gọi các hàm chưa implement (module_manager_stop_scanning/module_polling_manager_stop).\n- Yêu cầu thực tế là STOP SCAN MODULE RS485 (không phải LiDAR).\n\n---\n\n## Phạm vi\n- Firmware (FW): Thêm cơ chế dừng ngay (interrupt) cho quá trình scan RS485; bổ sung pause/resume; cập nhật API handler sử dụng đúng hàm RS485.\n- Backend (BE): Thêm proxy endpoint (nếu BE proxy FW) và WebSocket broadcast trạng thái scan.\n- Frontend (FE): Nút Stop/Pause/Resume và hiển thị trạng thái real-time.\n\n---\n\n## Phân tích chi tiết (FW)\n1) Biến điều khiển toàn cục\n- g_scan_interrupt_requested (bool): yêu cầu dừng.\n- g_scan_paused (bool): tạm dừng.\n- g_scan_active (bool): trạng thái scan đang chạy.\n\n2) API nội bộ mới\n- hal_status_t comm_manager_stop_scanning(void)\n- bool comm_manager_is_scanning(void)\n- hal_status_t comm_manager_pause_scanning(void)\n- hal_status_t comm_manager_resume_scanning(void)\n\n3) Thay đổi trong comm_manager_scan_range()\n- Kiểm tra g_scan_interrupt_requested ở các điểm: đầu vòng địa chỉ, trong vòng retry/backoff.\n- Khi pause: while (g_scan_paused && !g_scan_interrupt_requested) sleep ngắn 100ms.\n- Set g_scan_active=true khi bắt đầu, false khi kết thúc/interrupt.\n- Đảm bảo registry_set_scanning(false) khi dừng/break.\n\n4) API HTTP hiện có\n- POST /api/v1/modules/stop-scan: cập nhật handler gọi comm_manager_stop_scanning() thay vì module_manager_stop_scanning().\n- Thêm: POST /api/v1/modules/pause-scan, POST /api/v1/modules/resume-scan.\n\n5) Ảnh hưởng an toàn\n- STOP scan RS485 không ảnh hưởng Safety/E-Stop.\n- Polling các module đã online có thể được dừng riêng (module_polling_manager_stop) hoặc giữ nguyên tuỳ yêu cầu.\n\n---\n\n## Phân tích chi tiết (BE)\n- Thêm endpoint tương ứng (nếu BE đóng vai trò Gateway tới FW):\n  - POST /api/v1/modules/stop-scan\n  - POST /api/v1/modules/pause-scan\n  - POST /api/v1/modules/resume-scan\n- WebSocket: broadcast sự kiện module_scan_status: stopped/paused/resumed + timestamp.\n- Đảm bảo AuthN/AuthZ (JWT) theo SECURITY_CONFIG.\n\n---\n\n## Yêu cầu hiệu năng & bảo mật\n- API latency: < 100ms (p95).\n- Không block event-loop khi pause/resume (sleep ngắn).\n- Ghi log đầy đủ, audit endpoint gọi.\n- Rate limit phù hợp (SecurityMiddleware).\n\n---\n\n## Tiêu chí chấp nhận (AC)\n- Gọi POST /api/v1/modules/stop-scan khi scan đang chạy → dừng trong ≤ 5s, trả về success=true.\n- Gọi pause khi đang chạy → quá trình dừng tại chỗ, resume tiếp tục vòng địa chỉ kế tiếp.\n- registry_is_scanning() trả false sau khi stop.\n- Không lỗi linter, test cơ bản pass.\n\n---\n\n## Kế hoạch triển khai\n### Phase 1 (FW)\n- [ ] Thêm biến & API control trong communication_manager.{h,c}.\n- [ ] Bổ sung logic interrupt/pause trong comm_manager_scan_range().\n- [ ] Cập nhật api_handle_modules_stop_scan() gọi comm_manager_stop_scanning().\n- [ ] Thêm handler pause/resume và đăng ký endpoint.\n- [ ] Viết unit tests tối thiểu cho stop/pause/resume.\n\n### Phase 2 (BE)\n- [ ] Thêm route proxy 3 endpoint tương ứng.\n- [ ] Broadcast WebSocket module_scan_status.\n- [ ] Thêm log + rate limit + auth.\n\n### Phase 3 (FE)\n- [ ] Nút Stop/Pause/Resume + trạng thái.\n- [ ] Hiển thị phản hồi real-time từ WS.\n\n---\n\n## Rủi ro & Mitigation\n- Dừng giữa giao dịch Modbus: mitigation bằng kiểm tra sau mỗi lần đọc, chỉ break ở biên vòng lặp an toàn.\n- Deadlock khi pause: dùng sleep ngắn, không chặn cứng; có thể thêm watchdog.\n- Không đồng bộ trạng thái FE: dùng WS broadcast ngay khi đổi trạng thái.\n\n---\n\n## Definition of Done\n- Endpoint STOP/PAUSE/RESUME hoạt động với RS485 scan.\n- Log/metrics thể hiện dừng đúng, không rò rỉ trạng thái.\n- Tài liệu API cập nhật (docs/API_DOCUMENTATION.md).\n- Tuân thủ OHT-50 backend rules: hiệu năng, bảo mật, integration.\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/kimlam2010/OHT_V2/issues/147/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/kimlam2010/OHT_V2/issues/147/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
