/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'

const DashboardRouteLazyRouteImport = createFileRoute('/dashboard')()
const AuthRouteLazyRouteImport = createFileRoute('/_auth')()
const IndexLazyRouteImport = createFileRoute('/')()
const DashboardIndexLazyRouteImport = createFileRoute('/dashboard/')()
const AuthLoginLazyRouteImport = createFileRoute('/_auth/login')()

const DashboardRouteLazyRoute = DashboardRouteLazyRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/dashboard/route.lazy').then((d) => d.Route),
)
const AuthRouteLazyRoute = AuthRouteLazyRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/_auth/route.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const DashboardIndexLazyRoute = DashboardIndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/dashboard/index.lazy').then((d) => d.Route),
)
const AuthLoginLazyRoute = AuthLoginLazyRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteLazyRoute,
} as any).lazy(() => import('./routes/_auth/login.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/dashboard': typeof DashboardRouteLazyRouteWithChildren
  '/login': typeof AuthLoginLazyRoute
  '/dashboard/': typeof DashboardIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login': typeof AuthLoginLazyRoute
  '/dashboard': typeof DashboardIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/_auth': typeof AuthRouteLazyRouteWithChildren
  '/dashboard': typeof DashboardRouteLazyRouteWithChildren
  '/_auth/login': typeof AuthLoginLazyRoute
  '/dashboard/': typeof DashboardIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dashboard' | '/login' | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/dashboard'
    | '/_auth/login'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthRouteLazyRoute: typeof AuthRouteLazyRouteWithChildren
  DashboardRouteLazyRoute: typeof DashboardRouteLazyRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexLazyRouteImport
      parentRoute: typeof DashboardRouteLazyRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginLazyRouteImport
      parentRoute: typeof AuthRouteLazyRoute
    }
  }
}

interface AuthRouteLazyRouteChildren {
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
}

const AuthRouteLazyRouteChildren: AuthRouteLazyRouteChildren = {
  AuthLoginLazyRoute: AuthLoginLazyRoute,
}

const AuthRouteLazyRouteWithChildren = AuthRouteLazyRoute._addFileChildren(
  AuthRouteLazyRouteChildren,
)

interface DashboardRouteLazyRouteChildren {
  DashboardIndexLazyRoute: typeof DashboardIndexLazyRoute
}

const DashboardRouteLazyRouteChildren: DashboardRouteLazyRouteChildren = {
  DashboardIndexLazyRoute: DashboardIndexLazyRoute,
}

const DashboardRouteLazyRouteWithChildren =
  DashboardRouteLazyRoute._addFileChildren(DashboardRouteLazyRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthRouteLazyRoute: AuthRouteLazyRouteWithChildren,
  DashboardRouteLazyRoute: DashboardRouteLazyRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
