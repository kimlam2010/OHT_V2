---
alwaysApply: true
---
## üîß **Master Module Specification**

### **Hardware Requirements:**
- **USB Debug (1x):** USB 2.0 Type-C, debug console, firmware update
- **RS485 (1x):** Modbus RTU, slave modules communication
- **LAN (1x):** Ethernet 10/100/1000 Mbps, Center connection
- **Wireless 5G/2.4G:** WiFi 6, backup connection, mobile app
- **LED Status (5x):** Power, System, Communication, Network, Error
- **Emergency Stop (E-Stop):** Dual-channel safety, SIL2 compliance
- **Relay Output (1x):** 24V DC, 2A, external device control

### **Software Requirements:**
- **Multi-protocol communication:** RS485, Ethernet, WiFi, USB
- **Safety system:** E-Stop handling, emergency procedures
- **Status monitoring:** LED indicators, system health
- **Network redundancy:** Ethernet ‚Üí WiFi failover
- **Security:** SSL/TLS, authentication, authorization

---

## üéØ **PH·∫†M VI OHT-50 - THEO UI/UX REQUIREMENTS**

### **Dashboard Requirements (theo REQ_UI_UX_Dashboard_Design.md):**
- **Layout Structure:** Multi-panel dashboard v·ªõi 12-column grid system
- **Status Panel:** Robot status overview v·ªõi real-time indicators
- **Control Panel:** Manual control interface v·ªõi emergency controls
- **Map Interface:** LiDAR 360¬∞ visualization v·ªõi interactive controls

### **UI Components (theo c√°c t√†i li·ªáu UI/UX):**

#### **1. Core Dashboard Components (theo REQ_UI_UX_Dashboard_Design.md):**
- **Robot Status Card:** Operating mode, battery, speed, position, connection, temperature
- **Manual Control Panel:** Movement controls, speed control, emergency controls
- **LiDAR Map Interface:** Real-time 360¬∞ visualization, obstacle detection, path planning

#### **2. Control Panel Components (theo REQ_UI_UX_Control_Panel.md):**
- **Control Mode Selector:** AUTO/MANUAL/SEMI/MAINT modes
- **Movement Controls:** Directional buttons (forward, backward, left, right, stop)
- **Speed Control:** Slider v√† presets (Slow, Normal, Fast, Max)
- **Emergency Controls:** E-Stop, Pause, Reset, Home buttons

#### **3. Alert System Components (theo REQ_UI_UX_Alert_System.md):**
- **Alert Banner System:** Critical, Warning, Info, Success alerts
- **Notification Center:** Filterable notifications v·ªõi actions
- **Audio Notifications:** Configurable audio alerts v·ªõi volume control

#### **4. Configuration Interface (theo REQ_UI_UX_Configuration_Interface.md):**
- **Configuration Categories:** Safety, Operational, System, Interface
- **Configuration Panel:** Sidebar navigation v·ªõi form controls
- **Validation System:** Real-time validation v·ªõi safety checks

#### **5. Map Interface Components (theo REQ_UI_UX_Map_Interface.md):**
- **LiDAR Visualization:** Real-time point cloud rendering
- **Navigation Path:** Path planning v·ªõi waypoints v√† safety corridor
- **Obstacle Detection:** Clustering algorithm v·ªõi classification
- **Interactive Controls:** Zoom, pan, reset view, fullscreen

#### **6. Accessibility Features (theo REQ_UI_UX_Accessibility.md):**
- **Visual Accessibility:** Color contrast, typography, focus indicators
- **Motor Accessibility:** Keyboard navigation, touch targets
- **Cognitive Accessibility:** Clear hierarchy, consistent patterns
- **Assistive Technology:** Screen reader support, semantic HTML

### **Design System Integration (theo REQ_UI_UX_Design_System.md):**
- **Design Tokens:** Color system, typography, spacing, shadows
- **Component Library:** Button, Form, Data Display, Navigation, Feedback components
- **Responsive Design:** Mobile-first approach v·ªõi breakpoints
- **Accessibility Guidelines:** WCAG 2.1 AA compliance

### **Information Architecture (theo REQ_UI_UX_Information_Architecture.md):**
- **Site Map:** 9 main sections t·ª´ Authentication ƒë·∫øn Documentation
- **Content Hierarchy:** 4 levels t·ª´ Critical ƒë·∫øn Supporting information
- **Navigation Structure:** Primary navigation + Secondary sidebar
- **User Flows:** 4 main flows (Daily Monitoring, Emergency Response, Manual Control, Configuration)

### **Interaction Design (theo REQ_UI_UX_Interaction_Design.md):**
- **Emergency Controls:** Safety-first v·ªõi immediate response
- **Manual Control Panel:** Intuitive movement controls v·ªõi real-time feedback
- **Voice Commands:** Voice control interface v·ªõi command recognition
- **Visual Feedback:** Loading states, status indicators, alert notifications

---

## üìã **Quy t·∫Øc PM**

### **1. Review Process:**
- **Khi user y√™u c·∫ßu review** ‚Üí Ch·ªâ review, kh√¥ng s·ª≠a code
- **Khi user y√™u c·∫ßu update** ‚Üí C·∫≠p nh·∫≠t t√†i li·ªáu v√† code
- **Khi user y√™u c·∫ßu design** ‚Üí Tu√¢n th·ªß quy tr√¨nh 4 b∆∞·ªõc

### **2. Documentation Management:**
- **Update documentation** tr∆∞·ªõc khi update code
- **Clear navigation** cho teams
- **Updated information** v√† status
- **Professional presentation**

### **3. Communication Guidelines:**
- **Professional tone:** Respectful v√† constructive
- **Clear** v√† concise communication
- **Escalation process:** Identify issues ‚Üí Confirm scope ‚Üí Propose solutions

---

## üë• **Team Roles & Responsibilities**

### **4.1 EMBED (Hardware & Low-Level)**
- **M·ª•c ti√™u:** Master Module hardware bring-up v√† driver development
- **Nhi·ªám v·ª• chi ti·∫øt:**
  - UART1 RS485 configuration v√† testing
  - Ethernet/WiFi network setup
  - GPIO LED control (5 LEDs)
  - E-Stop dual-channel safety implementation
  - Relay output control
  - USB debug interface setup
- **ƒê·∫ßu ra b·∫Øt bu·ªôc:**
  - Hardware validation tests
  - HAL drivers (GPIO, RS485, Network)
  - Device tree overlays
  - Safety system validation

### **4.2 Firmware Team**
- **M·ª•c ti√™u:** Low-level firmware v√† HAL implementation
- **Nhi·ªám v·ª• chi ti·∫øt:**
  - HAL drivers development
  - Multi-protocol communication
  - Safety system integration
  - LED status management
  - E-Stop handling
- **ƒê·∫ßu ra b·∫Øt bu·ªôc:**
  - HAL API documentation
  - Communication protocols
  - Safety system validation
  - Unit tests

### **4.3 Backend Team**
- **M·ª•c ti√™u:** API services v√† system integration
- **Nhi·ªám v·ª• chi ti·∫øt:**
  - REST API development
  - WebSocket real-time communication
  - Database management
  - Security implementation
  - Module management
- **ƒê·∫ßu ra b·∫Øt bu·ªôc:**
  - API documentation
  - Database schemas
  - Security protocols
  - Integration tests

### **4.4 Frontend Team**
- **M·ª•c ti√™u:** User interface v√† user experience
- **Nhi·ªám v·ª• chi ti·∫øt:**
  - Dashboard UI development
  - Real-time monitoring interface
  - Configuration management
  - Mobile app development
  - User experience optimization
- **ƒê·∫ßu ra b·∫Øt bu·ªôc:**
  - Responsive UI components
  - User documentation
  - Mobile app
  - UI/UX guidelines

### **4.5 System Integration Team**
- **M·ª•c ti√™u:** End-to-end system integration v√† testing
- **Nhi·ªám v·ª• chi ti·∫øt:**
  - System integration testing
  - Performance optimization
  - Security validation
  - Deployment automation
- **ƒê·∫ßu ra b·∫Øt bu·ªôc:**
  - Integration test suite
  - Safety validation reports
  - Deployment scripts
  - Documentation
- **KPI:** System reliability, deployment success rate

---

## üè¢ **VAI TR√í CTO - CHI·∫æN L∆Ø·ª¢C K·ª∏ THU·∫¨T**

### **M·ª•c ti√™u ch√≠nh:**
- ƒê·ªãnh h∆∞·ªõng chi·∫øn l∆∞·ª£c k·ªπ thu·∫≠t t·ªïng th·ªÉ cho OHT-50 Master Module
- ƒê·∫£m b·∫£o ki·∫øn tr√∫c h·ªá th·ªëng ·ªïn ƒë·ªãnh, m·ªü r·ªông v√† b·∫£o tr√¨
- Qu·∫£n l√Ω r·ªßi ro k·ªπ thu·∫≠t v√† ƒë·∫£m b·∫£o tu√¢n th·ªß ti√™u chu·∫©n an to√†n
- T·ªëi ∆∞u h√≥a hi·ªáu su·∫•t v√† ƒë·ªô tin c·∫≠y h·ªá th·ªëng

### **Tr√°ch nhi·ªám ch√≠nh:**

#### **1. Ki·∫øn tr√∫c h·ªá th·ªëng (System Architecture):**
- **Thi·∫øt k·∫ø ki·∫øn tr√∫c t·ªïng th·ªÉ:** Master Module ‚Üî Slave Modules ‚Üî Center
- **ƒê·ªãnh nghƒ©a interface chu·∫©n:** API, protocol, data format
- **Scalability planning:** M·ªü r·ªông t·ª´ 1 module l√™n nhi·ªÅu module
- **Technology stack decisions:** Hardware, firmware, software stack
- **Performance optimization:** Latency, throughput, resource usage

#### **2. Qu·∫£n l√Ω r·ªßi ro k·ªπ thu·∫≠t (Technical Risk Management):**
- **Safety compliance:** SIL2, IEC 61508, functional safety
- **Security assessment:** Network security, data protection
- **Reliability engineering:** MTBF, MTTR, fault tolerance
- **Compliance validation:** Industry standards, certifications
- **Risk mitigation strategies:** Backup systems, failover mechanisms

#### **3. Chi·∫øn l∆∞·ª£c ph√°t tri·ªÉn (Development Strategy):**
- **Technology roadmap:** Short-term v√† long-term planning
- **Innovation management:** New technologies, improvements
- **Quality assurance:** Testing strategies, validation methods
- **Documentation standards:** Technical documentation, API docs
- **Knowledge management:** Team training, best practices

#### **4. Qu·∫£n l√Ω t√†i nguy√™n k·ªπ thu·∫≠t (Technical Resource Management):**
- **Team structure:** Skills assessment, role definition
- **Tool selection:** Development tools, testing frameworks
- **Infrastructure planning:** Development environment, CI/CD
- **Budget optimization:** Cost-effective solutions
- **Vendor management:** Hardware suppliers, software licenses

### **Quy t·∫Øc CTO:**

#### **1. Ki·∫øn tr√∫c quy·∫øt ƒë·ªãnh (Architecture Decisions):**
- **Document all major decisions:** ADR (Architecture Decision Records)
- **Review v√† approve:** All architectural changes
- **Performance impact assessment:** Before implementation
- **Security review:** All new features v√† integrations
- **Compliance validation:** Industry standards adherence

#### **2. Code Review Standards:**
- **Critical path review:** Safety-critical code
- **Performance review:** High-impact changes
- **Security review:** All external integrations
- **Architecture compliance:** Design pattern adherence
- **Documentation review:** API documentation, technical specs

#### **3. Release Management:**
- **Release approval:** All production releases
- **Rollback planning:** Emergency procedures
- **Performance monitoring:** Post-release validation
- **Security validation:** Vulnerability assessment
- **Compliance verification:** Standards compliance

#### **4. Team Leadership:**
- **Technical mentoring:** Team skill development
- **Best practices enforcement:** Coding standards, testing
- **Innovation encouragement:** New ideas, improvements
- **Problem escalation:** Technical issues resolution
- **Knowledge sharing:** Technical presentations, workshops

### **KPI cho CTO:**

#### **Technical Metrics:**
- **System reliability:** 99.9% uptime target
- **Performance:** Response time < 100ms
- **Security:** Zero critical vulnerabilities
- **Compliance:** 100% standards adherence
- **Code quality:** < 1% defect rate

#### **Process Metrics:**
- **Release frequency:** Weekly releases
- **Time to market:** Feature delivery speed
- **Team productivity:** Velocity improvement
- **Knowledge retention:** Documentation completeness
- **Innovation rate:** New features adoption

### **Escalation Matrix:**

#### **Level 1 - Team Lead:**
- Technical issues resolution
- Code review coordination
- Performance optimization

#### **Level 2 - CTO:**
- Architecture decisions
- Security incidents
- Compliance violations
- Major performance issues

#### **Level 3 - Executive:**
- Strategic technology decisions
- Budget approval
- Vendor selection
- Risk assessment

---

## üîÑ **Workflow & Stage-Gate**

### **Gate A: Master Module Architecture**
- ‚úÖ Hardware specification approved
- ‚úÖ Software architecture defined
- ‚úÖ Safety requirements identified
- ‚úÖ Team roles assigned

### **Gate B: Hardware & Safety Integration**
- ‚úÖ UART1 RS485 working
- ‚úÖ Network interfaces configured
- ‚úÖ LED control implemented
- ‚úÖ E-Stop safety system working
- ‚úÖ Relay control implemented

### **Gate C: Firmware & Communication**
- ‚úÖ HAL drivers completed
- ‚úÖ Multi-protocol communication working
- ‚úÖ Module auto-discovery implemented
- ‚úÖ Network redundancy tested
- ‚úÖ Safety system integrated

### **Gate D: Backend & Frontend Integration**
- ‚úÖ API services implemented
- ‚úÖ Dashboard UI completed
- ‚úÖ Real-time communication working
- ‚úÖ Configuration interface ready
- ‚úÖ Security implemented

### **Gate E: System Testing & Validation**
- ‚úÖ End-to-end testing completed
- ‚úÖ Safety validation passed
- ‚úÖ Performance requirements met
- ‚úÖ Documentation updated
- ‚úÖ User acceptance testing

### **Gate R: Production Release**
- ‚úÖ Production deployment ready
- ‚úÖ Monitoring configured
- ‚úÖ Backup procedures in place
- ‚úÖ Training completed
- ‚úÖ Go-live checklist completed

---

## üìä **Success Metrics**

### **Technical Metrics:**
- ‚úÖ **Hardware reliability:** 99.9% uptime
- ‚úÖ **Safety compliance:** SIL2 standards met
- ‚úÖ **Communication reliability:** < 1% packet loss
- ‚úÖ **Response time:** E-Stop < 100ms
- ‚úÖ **UI responsiveness:** < 200ms

### **Project Metrics:**
- ‚úÖ **Documentation:** 100% updated
- ‚úÖ **Communication:** Clear v√† effective
- ‚úÖ **User satisfaction:** High satisfaction scores
- ‚úÖ **System issues:** No critical issues
- ‚úÖ **Timeline adherence:** On schedule

---

## üõ†Ô∏è **Tools & Resources**

### **Development Tools:**
- **Git commands** cho PR creation
- **Documentation tools** cho docs management
- **Testing frameworks** cho validation
- **CI/CD pipelines** cho deployment

### **Communication Tools:**
- **Project management** cho task tracking
- **Issue tracking** cho bug management
- **Documentation** cho knowledge sharing
- **Review process** cho quality control

---

## üìö **RELATED DOCUMENTS**

### **CTO Rules:**
- **File:** `docs/CTO_RULES_OHT-50.md`
- **Purpose:** Chi ti·∫øt vai tr√≤ v√† tr√°ch nhi·ªám CTO
- **Scope:** Technical strategy, architecture decisions, risk management

### **Technical Documentation:**
- **RS485 Integration:** `docs/technical/rs485-motor-control-integration.md`
- **Embedded Guide:** `docs/EMBED_COMPLETE_GUIDE.md`
- **Firmware Summary:** `docs/MASTER_MODULE_IMPLEMENTATION_SUMMARY.md`

---

**Changelog v2.1:**
- ‚úÖ Added CTO role v√† responsibilities
- ‚úÖ Added technical risk management
- ‚úÖ Added architecture decision framework
- ‚úÖ Added CTO KPI metrics
- ‚úÖ Added escalation matrix
- ‚úÖ Enhanced technical leadership guidelines
- ‚úÖ Added related documents section

**üö® L∆∞u √Ω:** Lu√¥n tu√¢n th·ªß rules n√†y ƒë·ªÉ tr√°nh can thi·ªáp kh√¥ng c·∫ßn thi·∫øt v√† b·∫£o v·ªá h·ªá th·ªëng.
