{
  "openapi": "3.0.2",
  "info": {
    "title": "OHT-50 Backend API",
    "description": "üöÄ OHT-50 Backend API v2.0 - Production Ready\n\n## üìã **API Overview**\n**40+ Endpoints** across 7 main categories providing comprehensive robot control and monitoring:\n\n### üîê **Authentication API** (5 endpoints)\n- User login/logout, JWT token management, user profile\n\n### ü§ñ **Robot Control API** (6 endpoints)  \n- Robot status, movement control, position tracking, emergency stop\n\n### üìä **Telemetry API** (6 endpoints)\n- Real-time sensor data, LiDAR scans, data collection management\n\n### üö® **Safety API** (5 endpoints)\n- Safety status, emergency controls, alert management, safety zones\n\n### ‚ö° **Speed Control API** (6 endpoints)\n- Speed management, acceleration limits, performance monitoring\n\n### ‚öôÔ∏è **Configuration API** (4 endpoints)\n- System settings, robot parameters, configuration management\n\n### üìà **Monitoring API** (6 endpoints)\n- System health, performance metrics, logs, alerts\n\n### üîå **WebSocket API** (Real-time)\n- Live telemetry updates, real-time notifications\n\n## üéØ **Performance Targets**\n- **API Response**: < 50ms\n- **Emergency Stop**: < 10ms  \n- **WebSocket Latency**: < 20ms\n- **Database Queries**: < 10ms\n- **System Uptime**: > 99.9%\n\n## üîí **Security Features**\n- JWT Authentication with RBAC\n- Rate Limiting & Input Validation\n- Security Headers & Audit Logging\n- CORS Protection\n\n## üîß **Authentication**\nMost endpoints require JWT token in header:\n```\nAuthorization: Bearer <your_jwt_token>\n```\n\n## üìö **Documentation**\n- Complete API reference in `/docs`\n- Interactive testing in Swagger UI\n- Production-ready with comprehensive error handling",
    "version": "2.0.0",
    "contact": {
      "name": "OHT-50 Development Team",
      "email": "dev@oht50.com",
      "url": "https://github.com/oht50/backend"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    },
    {
      "url": "https://api.oht50.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "üîê User authentication, JWT tokens, and authorization (5 endpoints)"
    },
    {
      "name": "Robot Control",
      "description": "ü§ñ Robot movement, status monitoring, and control operations (6 endpoints)"
    },
    {
      "name": "Telemetry",
      "description": "üìä Real-time sensor data, LiDAR scans, and data collection (6 endpoints)"
    },
    {
      "name": "Safety",
      "description": "üö® Safety management, emergency controls, and alert systems (5 endpoints)"
    },
    {
      "name": "Configuration",
      "description": "‚öôÔ∏è System configuration and parameter management (4 endpoints)"
    },
    {
      "name": "Monitoring",
      "description": "üìà System health, performance metrics, and monitoring (6 endpoints)"
    },
    {
      "name": "Speed Control",
      "description": "‚ö° Advanced speed control with safety integration (6 endpoints)"
    },
    {
      "name": "WebSocket",
      "description": "üîå Real-time communication and live updates"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "System health check endpoint - OPTIMIZED for performance",
        "tags": ["Monitoring"],
        "responses": {
          "200": {
            "description": "System health status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "status": {"type": "string"},
                    "timestamp": {"type": "string"},
                    "system_health": {"type": "string"},
                    "overall_health_score": {"type": "number"},
                    "performance": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health/fast": {
      "get": {
        "summary": "Fast Health Check",
        "description": "Fast health check endpoint - minimal checks for performance testing",
        "tags": ["Monitoring"],
        "responses": {
          "200": {
            "description": "Fast health status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "status": {"type": "string"},
                    "timestamp": {"type": "string"},
                    "performance": {"type": "string"},
                    "checks": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/test-auth": {
      "get": {
        "summary": "Test Authentication",
        "description": "Test endpoint without authentication",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "Test response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "message": {"type": "string"},
                    "timestamp": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root Endpoint",
        "description": "Root endpoint with API information",
        "tags": ["Monitoring"],
        "responses": {
          "200": {
            "description": "API information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "version": {"type": "string"},
                    "status": {"type": "string"},
                    "docs": {"type": "string"},
                    "health": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from /api/v1/auth/login"
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean", "example": false},
          "error": {"type": "string"},
          "detail": {"type": "string"},
          "timestamp": {"type": "string"}
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean", "example": true},
          "data": {"type": "object"},
          "message": {"type": "string"},
          "timestamp": {"type": "string"}
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}
