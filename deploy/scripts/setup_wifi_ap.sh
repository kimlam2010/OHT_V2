#!/bin/bash
# Setup WiFi AP for OHT-50
# Phi√™n b·∫£n: 1.0.0
# Ng√†y: 2025-10-07

set -e

echo "üîß ============================================"
echo "üì° OHT-50 WiFi AP Setup Script"
echo "üîß ============================================"
echo ""

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Check if running as root
if [ "$EUID" -ne 0 ]; then 
    echo -e "${RED}‚ùå Vui l√≤ng ch·∫°y v·ªõi sudo:${NC}"
    echo -e "${YELLOW}   sudo bash $0${NC}"
    exit 1
fi

echo -e "${BLUE}üì¶ B∆∞·ªõc 1: C√†i ƒë·∫∑t packages c·∫ßn thi·∫øt...${NC}"
apt-get update -qq
apt-get install -y hostapd dnsmasq iw

echo ""
echo -e "${BLUE}üõë B∆∞·ªõc 2: Stop NetworkManager ƒë·ªÉ kh√¥ng can thi·ªáp...${NC}"
systemctl stop NetworkManager 2>/dev/null || true

echo ""
echo -e "${BLUE}üîå B∆∞·ªõc 3: Setup interface wlan0...${NC}"
# Bring wlan0 down
ip link set wlan0 down 2>/dev/null || true

# Set wlan0 to AP mode
iw dev wlan0 set type __ap 2>/dev/null || echo "Note: Could not set AP mode (may not be needed)"

# Bring wlan0 up
ip link set wlan0 up

# Set IP address
ip addr flush dev wlan0
ip addr add 192.168.4.1/24 dev wlan0

echo ""
echo -e "${BLUE}üöÄ B∆∞·ªõc 4: Start hostapd...${NC}"
if [ -f /tmp/hostapd.conf ]; then
    echo "   Config file: /tmp/hostapd.conf"
    cat /tmp/hostapd.conf
    echo ""
    
    # Kill existing hostapd
    pkill hostapd 2>/dev/null || true
    sleep 1
    
    # Start hostapd in background
    hostapd -B /tmp/hostapd.conf -P /tmp/hostapd.pid
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ hostapd started successfully!${NC}"
        echo "   PID: $(cat /tmp/hostapd.pid 2>/dev/null || echo 'N/A')"
    else
        echo -e "${RED}‚ùå Failed to start hostapd${NC}"
        exit 1
    fi
else
    echo -e "${RED}‚ùå Config file /tmp/hostapd.conf not found!${NC}"
    echo "   Vui l√≤ng g·ªçi API start WiFi AP tr∆∞·ªõc:"
    echo -e "${YELLOW}   curl -X POST http://localhost:8080/api/v1/network/ap/start ...${NC}"
    exit 1
fi

echo ""
echo -e "${BLUE}üåê B∆∞·ªõc 5: Start dnsmasq (DHCP server)...${NC}"
if [ -f /tmp/dnsmasq.conf ]; then
    echo "   Config file: /tmp/dnsmasq.conf"
    
    # Kill existing dnsmasq on wlan0
    pkill -f "dnsmasq.*wlan0" 2>/dev/null || true
    sleep 1
    
    # Start dnsmasq
    dnsmasq -C /tmp/dnsmasq.conf --pid-file=/tmp/dnsmasq.pid
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ dnsmasq started successfully!${NC}"
        echo "   PID: $(cat /tmp/dnsmasq.pid 2>/dev/null || echo 'N/A')"
    else
        echo -e "${RED}‚ùå Failed to start dnsmasq${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  dnsmasq config not found, skipping DHCP server${NC}"
fi

echo ""
echo -e "${GREEN}‚úÖ ============================================${NC}"
echo -e "${GREEN}üéâ WiFi AP Setup Complete!${NC}"
echo -e "${GREEN}‚úÖ ============================================${NC}"
echo ""
echo -e "${BLUE}üì° Th√¥ng tin WiFi AP:${NC}"
if [ -f /tmp/hostapd.conf ]; then
    SSID=$(grep "^ssid=" /tmp/hostapd.conf | cut -d= -f2)
    PASSWORD=$(grep "^wpa_passphrase=" /tmp/hostapd.conf | cut -d= -f2)
    CHANNEL=$(grep "^channel=" /tmp/hostapd.conf | cut -d= -f2)
    
    echo -e "   üì∂ SSID:     ${GREEN}$SSID${NC}"
    echo -e "   üîê Password: ${GREEN}$PASSWORD${NC}"
    echo -e "   üìª Channel:  ${GREEN}$CHANNEL${NC}"
    echo -e "   üåê IP:       ${GREEN}192.168.4.1${NC}"
fi

echo ""
echo -e "${BLUE}üîç Ki·ªÉm tra tr·∫°ng th√°i:${NC}"
echo -e "   ${YELLOW}ps aux | grep hostapd${NC}"
echo -e "   ${YELLOW}iw dev wlan0 info${NC}"
echo -e "   ${YELLOW}ip addr show wlan0${NC}"

echo ""
echo -e "${BLUE}üì± K·∫øt n·ªëi t·ª´ ƒëi·ªán tho·∫°i/laptop:${NC}"
echo -e "   1Ô∏è‚É£  M·ªü WiFi settings"
echo -e "   2Ô∏è‚É£  T√¨m SSID: ${GREEN}$SSID${NC}"
echo -e "   3Ô∏è‚É£  Nh·∫≠p password: ${GREEN}$PASSWORD${NC}"
echo -e "   4Ô∏è‚É£  K·∫øt n·ªëi v√† s·∫Ω ƒë∆∞·ª£c c·∫•p IP: ${GREEN}192.168.4.x${NC}"

echo ""

